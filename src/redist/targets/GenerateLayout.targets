<Project>
  <PropertyGroup>
    <RedistLayoutPath>$(BaseOutputPath)$(Configuration)\dotnet\</RedistLayoutPath>
    <SdkInternalLayoutPath>$(BaseOutputPath)$(Configuration)\dotnet-internal\</SdkInternalLayoutPath>
    <Templates30LayoutPath>$(BaseOutputPath)$(Configuration)\templates-3.0\</Templates30LayoutPath>
    <Templates22LayoutPath>$(BaseOutputPath)$(Configuration)\templates-2.2\</Templates22LayoutPath>
    <Templates21LayoutPath>$(BaseOutputPath)$(Configuration)\templates-2.1\</Templates21LayoutPath>
    <DownloadsFolder>$(IntermediateOutputPath)downloads\</DownloadsFolder>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Blob storage directories are not stabilized, so these must refer to a package that does not stabilize -->
    <AspNetCoreBlobVersion>$(MicrosoftAspNetCoreDeveloperCertificatesXPlatPackageVersion)</AspNetCoreBlobVersion>
    <CoreSetupBlobVersion>$(MicrosoftNETCoreAppInternalPackageVersion)</CoreSetupBlobVersion>

    <!-- Change these individually to or $(CoreSetupBlobVersion) or $(AspNetCoreBlobVersion) if corresponding .Ref packages are unpinned. -->
    <NETCoreAppTargetingPackBlobVersion>3.0.0</NETCoreAppTargetingPackBlobVersion>
    <AspNetCoreTargetingPackBlobVersion>3.0.0</AspNetCoreTargetingPackBlobVersion>
    <WindowsDesktopTargetingPackBlobVersion>3.0.0</WindowsDesktopTargetingPackBlobVersion>
    <NETStandardTargetingPackBlobVersion>3.0.0</NETStandardTargetingPackBlobVersion>
  </PropertyGroup>
 
  <Target Name="SetupBundledComponents" DependsOnTargets="GetCurrentRuntimeInformation;SetupFileExtensions;SetSdkVersionInfo;SetBuildDefaults">
    <PropertyGroup>
      <SdkOutputDirectory>$(RedistLayoutPath)sdk\$(SdkVersion)\</SdkOutputDirectory>
      
      <InternalBuild Condition="$(SYSTEM_TEAMPROJECT) == 'internal' and $(BUILD_SOURCEBRANCH.ToLower().contains('internal'))">true</InternalBuild>
      <CoreSetupBlobAccessTokenParam Condition="'$(InternalBuild)' == 'true'">$(DOTNETCLIMSRC_READ_SAS_TOKEN)</CoreSetupBlobAccessTokenParam>

      <CoreSetupBlobRootUrl Condition="'$(CoreSetupBlobRootUrl)' == '' and '$(InternalBuild)' == 'true'">https://dotnetclimsrc.blob.core.windows.net/dotnet/</CoreSetupBlobRootUrl>
      <CoreSetupBlobRootUrl Condition="'$(CoreSetupBlobRootUrl)' == ''">https://dotnetcli.azureedge.net/dotnet/</CoreSetupBlobRootUrl>

      <DotnetExtensionsBlobRootUrl Condition="'$(DotnetExtensionsBlobRootUrl)' == '' and '$(InternalBuild)' == 'true'">https://dotnetclimsrc.blob.core.windows.net/dotnet/</DotnetExtensionsBlobRootUrl>
      <DotnetExtensionsBlobRootUrl Condition="'$(DotnetExtensionsBlobRootUrl)' == ''">https://dotnetcli.blob.core.windows.net/dotnet/</DotnetExtensionsBlobRootUrl>
      
      <DotnetToolsetBlobRootUrl Condition="'$(DotnetToolsetBlobRootUrl)' == '' and '$(InternalBuild)' == 'true'">https://dotnetclimsrc.blob.core.windows.net/dotnet/</DotnetToolsetBlobRootUrl>
      <DotnetToolsetBlobRootUrl Condition="'$(DotnetToolsetBlobRootUrl)' == ''">https://dotnetfeed.blob.core.windows.net/dotnet-toolset/</DotnetToolsetBlobRootUrl>
      
      <CoreSetupRid Condition="'$(CoreSetupRid)' == ''">$(HostRid)</CoreSetupRid>
      <CoreSetupRid Condition=" ('$(HostOSName)' == 'win' or '$(HostOSName)' == 'osx' or '$(HostOSName)' == 'freebsd') and '$(DotNetBuildFromSource)' != 'true' ">$(HostMonikerRid)</CoreSetupRid>

      <!-- only the runtime OSX .pkgs have a `-internal` suffix -->
      <InstallerStartSuffix Condition="'$(HostOSName)' == 'osx'">-internal</InstallerStartSuffix>

      <!-- Downloaded Installers + Archives -->

      <!-- Use the "x64" Rid when downloading Linux shared framework 'DEB' installer files. -->
      <SharedFrameworkInstallerFileRid>$(CoreSetupRid)</SharedFrameworkInstallerFileRid>
      <SharedFrameworkInstallerFileRid Condition=" '$(IsDebianBaseDistro)' == 'true' OR '$(IsRPMBasedDistro)' == 'true' ">x64</SharedFrameworkInstallerFileRid>

      <!-- Use the "x64" Rid when downloading Linux runtime dependencies Debian package. -->
      <RuntimeDepsInstallerFileRid>$(CoreSetupRid)</RuntimeDepsInstallerFileRid>
      <RuntimeDepsInstallerFileRid Condition=" '$(IsDebianBaseDistro)' == 'true' ">x64</RuntimeDepsInstallerFileRid>

      <DownloadedSharedHostInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-host$(InstallerStartSuffix)-$(SharedHostVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedSharedHostInstallerFileName>
      <DownloadedHostFxrInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-hostfxr$(InstallerStartSuffix)-$(HostFxrVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedHostFxrInstallerFileName>
      <DownloadedSharedFrameworkInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-runtime$(InstallerStartSuffix)-$(MicrosoftNETCoreAppRuntimePackageVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedSharedFrameworkInstallerFileName>
      <DownloadedRuntimeDepsInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-runtime-deps-$(SharedHostVersion)-$(RuntimeDepsInstallerFileRid)$(InstallerExtension)</DownloadedRuntimeDepsInstallerFileName>
      <DownloadedWinFormsAndWpfSharedFrameworkInstallerFileName Condition=" '$(InstallerExtension)' != '' ">windowsdesktop-runtime-$(MicrosoftWindowsDesktopAppRuntimePackageVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedWinFormsAndWpfSharedFrameworkInstallerFileName>
      <DownloadedNetCoreAppTargetingPackInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-targeting-pack-$(MicrosoftNETCoreAppRefPackageVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedNetCoreAppTargetingPackInstallerFileName>
      <DownloadedNetCoreAppHostPackInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-apphost-pack-$(MicrosoftNETCoreAppHostPackageVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedNetCoreAppHostPackInstallerFileName>
      <DownloadedWindowsDesktopTargetingPackInstallerFileName Condition=" '$(InstallerExtension)' != '' ">windowsdesktop-targeting-pack-$(MicrosoftWindowsDesktopAppRefPackageVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedWindowsDesktopTargetingPackInstallerFileName>
      <DownloadedNetStandardTargetingPackInstallerFileName Condition=" '$(InstallerExtension)' != '' ">netstandard-targeting-pack-$(NETStandardLibraryRefPackageVersion)-$(SharedFrameworkInstallerFileRid)$(InstallerExtension)</DownloadedNetStandardTargetingPackInstallerFileName>
      <NetStandardTargetingPackTargetFramework>netstandard$(NETStandardLibraryRefPackageVersion.Split('.')[0])$(NETStandardLibraryRefPackageVersion.Split('.')[1])</NetStandardTargetingPackTargetFramework>

      <!-- Use the portable "linux-x64" Rid when downloading Linux shared framework compressed file. -->
      <SharedFrameworkRid>$(CoreSetupRid)</SharedFrameworkRid>
      <SharedFrameworkRid Condition=" '$(ProductMonikerRid)' == 'linux-musl-x64' ">$(ProductMonikerRid)</SharedFrameworkRid>
      <SharedFrameworkRid Condition=" '$(UsePortableLinuxSharedFramework)' == 'true' ">linux-$(Architecture)</SharedFrameworkRid>
      <CombinedFrameworkHostCompressedFileName>dotnet-runtime-$(MicrosoftNETCoreAppRuntimePackageVersion)-$(SharedFrameworkRid)$(ArchiveExtension)</CombinedFrameworkHostCompressedFileName>

      <AspNetCoreSharedFxInstallerRid Condition="'$(AspNetCoreSharedFxInstallerRid)' == ''">$(SharedFrameworkRid)</AspNetCoreSharedFxInstallerRid>
      <AspNetCoreSharedFxInstallerRid Condition="'$(SharedFrameworkRid)' == 'rhel.6-x64'">linux-x64</AspNetCoreSharedFxInstallerRid>
      <AspNetCoreSharedFxArchiveRid>$(AspNetCoreSharedFxInstallerRid)</AspNetCoreSharedFxArchiveRid>
      <AspNetCoreSharedFxInstallerRid Condition="'$(InstallerExtension)' == '.deb' OR '$(InstallerExtension)' == '.rpm'">x64</AspNetCoreSharedFxInstallerRid>

      <DownloadedAspNetCoreSharedFxInstallerFileName Condition=" '$(InstallerExtension)' != '' AND '$(HostOSName)' != 'osx' ">aspnetcore-runtime-$(MicrosoftAspNetCoreAppRuntimePackageVersion)-$(AspNetCoreSharedFxInstallerRid)$(InstallerExtension)</DownloadedAspNetCoreSharedFxInstallerFileName>
      <!-- Note: we use the "-internal" archives and installers that contain only the aspnetcore shared framework, and shouldn't overlap with Microsoft.NETCore.App. -->
      <DownloadedAspNetCoreSharedFxInstallerFileName Condition=" '$(InstallerExtension)' == '.msi' ">aspnetcore-runtime-internal-$(MicrosoftAspNetCoreAppRuntimePackageVersion)-$(AspNetCoreSharedFxInstallerRid).wixlib</DownloadedAspNetCoreSharedFxInstallerFileName>
      <DownloadedAspNetTargetingPackInstallerFileName Condition=" '$(InstallerExtension)' != '' ">aspnetcore-targeting-pack-$(MicrosoftAspNetCoreAppRefPackageVersion)$(InstallerExtension)</DownloadedAspNetTargetingPackInstallerFileName>
      <DownloadedAspNetTargetingPackInstallerFileName Condition=" '$(InstallerExtension)' == '.msi' ">aspnetcore-targeting-pack-$(MicrosoftAspNetCoreAppRefPackageVersion)-$(AspNetCoreSharedFxInstallerRid)$(InstallerExtension)</DownloadedAspNetTargetingPackInstallerFileName>
      <AspNetTargetingPackArchiveFileName>aspnetcore-targeting-pack-$(MicrosoftAspNetCoreAppRefPackageVersion)$(ArchiveExtension)</AspNetTargetingPackArchiveFileName>
      <AspNetCoreSharedFxArchiveFileName>aspnetcore-runtime-internal-$(MicrosoftAspNetCoreAppRuntimePackageVersion)-$(AspNetCoreSharedFxArchiveRid)$(ArchiveExtension)</AspNetCoreSharedFxArchiveFileName>
      <WinFormsAndWpfSharedFxArchiveFileName>windowsdesktop-runtime-$(MicrosoftWindowsDesktopAppRuntimePackageVersion)-$(SharedFrameworkRid)$(ArchiveExtension)</WinFormsAndWpfSharedFxArchiveFileName>

      <!-- Used to detect if ASP.NET Core is built against the same version of Microsoft.NETCore.App. -->
      <AspNetCoreSharedFxBaseRuntimeVersionFileName>aspnetcore_base_runtime.version</AspNetCoreSharedFxBaseRuntimeVersionFileName>
    </PropertyGroup>

    <PropertyGroup>
      <CoreSetupRootUrl>$(CoreSetupBlobRootUrl)Runtime/</CoreSetupRootUrl>
      <AspNetCoreSharedFxRootUrl>$(CoreSetupBlobRootUrl)aspnetcore/Runtime/</AspNetCoreSharedFxRootUrl>
      <WinFormsAndWpfSharedFxRootUrl>$(CoreSetupRootUrl)</WinFormsAndWpfSharedFxRootUrl>
      <CoreSetupDownloadDirectory>$(IntermediateDirectory)/coreSetupDownload/$(MicrosoftNETCoreAppRuntimePackageVersion)</CoreSetupDownloadDirectory>
      <CombinedSharedHostAndFrameworkArchive>$(CoreSetupDownloadDirectory)/combinedSharedHostAndFrameworkArchive$(ArchiveExtension)</CombinedSharedHostAndFrameworkArchive>
    </PropertyGroup>

    <PropertyGroup Condition="'$(HostOSName)' == 'win'">
      <AlternateAppHostRid Condition="'$(Architecture)' == 'x86'">win-x64</AlternateAppHostRid>
      <AlternateAppHostRid Condition="'$(Architecture)' == 'x64'">win-x86</AlternateAppHostRid>
    </PropertyGroup>

    <ItemGroup>
      <BundledLayoutComponent Include="CombinedSharedHostAndFrameworkArchive">
        <BaseUrl>$(CoreSetupRootUrl)$(MicrosoftNETCoreAppRuntimePackageVersion)</BaseUrl>
        <DownloadFileName>$(CombinedFrameworkHostCompressedFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
        <RelativeLayoutPath></RelativeLayoutPath>
      </BundledLayoutComponent>

      <BundledLayoutPackage Include="MicrosoftNetCoreAppTargetingPackNupkg">
        <PackageName>Microsoft.NETCore.App.Ref</PackageName>
        <PackageVersion>$(MicrosoftNETCoreAppRefPackageVersion)</PackageVersion>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <RelativeLayoutPath>packs/%(PackageName)/%(PackageVersion)</RelativeLayoutPath>
      </BundledLayoutPackage>

      <BundledLayoutPackage Include="MicrosoftNetStandardTargetingPackNupkg">
        <PackageName>NETStandard.Library.Ref</PackageName>
        <PackageVersion>$(NETStandardLibraryRefPackageVersion)</PackageVersion>
        <TargetFramework>$(NetStandardTargetingPackTargetFramework)</TargetFramework>
        <RelativeLayoutPath>packs/%(PackageName)/%(PackageVersion)</RelativeLayoutPath>
      </BundledLayoutPackage>
      
      <BundledLayoutPackage Include="MicrosoftAspNetCoreAppTargetingPackNupkg">
        <PackageName>Microsoft.AspNetCore.App.Ref</PackageName>
        <PackageVersion>$(MicrosoftAspNetCoreAppRefPackageVersion)</PackageVersion>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <RelativeLayoutPath>packs/%(PackageName)/%(PackageVersion)</RelativeLayoutPath>
      </BundledLayoutPackage>

      <BundledLayoutPackage Include="MicrosoftNetCoreAppHostPackNupkg">
        <PackageName>Microsoft.NETCore.App.Host.$(SharedFrameworkRid)</PackageName>
        <PackageVersion>$(MicrosoftNETCoreAppHostPackageVersion)</PackageVersion>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <RelativeLayoutPath>packs/%(PackageName)/%(PackageVersion)</RelativeLayoutPath>
      </BundledLayoutPackage>

      <BundledLayoutPackage Include="MicrosoftNetCoreAppHostPackNupkg_Alternate" Condition="'$(AlternateAppHostRid)' != ''">
        <PackageName>Microsoft.NETCore.App.Host.$(AlternateAppHostRid)</PackageName>
        <PackageVersion>$(MicrosoftNETCoreAppHostPackageVersion)</PackageVersion>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <RelativeLayoutPath>packs/%(PackageName)/%(PackageVersion)</RelativeLayoutPath>
      </BundledLayoutPackage>

      <BundledInstallerComponent Include="DownloadedRuntimeDepsInstallerFile"
                                 Condition="('$(IsDebianBaseDistro)' == 'true' OR '$(IsRPMBasedDistro)' == 'true') And '$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedRuntimeDepsInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
      
      <BundledInstallerComponent Include="DownloadedSharedFrameworkInstallerFile"
                                 Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedSharedFrameworkInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
      
      <BundledInstallerComponent Include="DownloadedSharedHostInstallerFile"
                                 Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedSharedHostInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
      
      <BundledInstallerComponent Include="DownloadedHostFxrInstallerFile"
                                 Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedHostFxrInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
      
      <BundledInstallerComponent Include="DownloadedNetCoreAppTargetingPackInstallerFile"
                                 Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(NETCoreAppTargetingPackBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedNetCoreAppTargetingPackInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>

      <BundledInstallerComponent Include="DownloadedNetStandardTargetingPackInstallerFile"
                           Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(NETStandardTargetingPackBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedNetStandardTargetingPackInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>

      <BundledInstallerComponent Include="DownloadedNetCoreAppHostPackInstallerFile"
                     Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedNetCoreAppHostPackInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
      
      <BundledInstallerComponent Include="DownloadedWindowsDesktopTargetingPackInstallerFile"
                                 Condition="'$(InstallerExtension)' == '.msi' And '$(SkipBuildingInstallers)' != 'true' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(CoreSetupRootUrl)$(WindowsDesktopTargetingPackBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedWindowsDesktopTargetingPackInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>

      <BundledLayoutComponent Include="ToolsetArchive">
        <BaseUrl>$(DotnetToolsetBlobRootUrl)Toolset/$(MicrosoftDotnetToolsetInternalPackageVersion)</BaseUrl>
        <DownloadFileName>dotnet-toolset-internal-$(MicrosoftDotnetToolsetInternalPackageVersion).zip</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
        <RelativeLayoutPath>sdk/$(SdkVersion)</RelativeLayoutPath>
      </BundledLayoutComponent>
    </ItemGroup>

    <ItemGroup Condition=" '$(IncludeAspNetCoreRuntime)' != 'false' ">
      <BundledLayoutComponent Include="DownloadedAspNetCoreSharedFxArchiveFile">
        <BaseUrl>$(AspNetCoreSharedFxRootUrl)$(AspNetCoreBlobVersion)</BaseUrl>
        <DownloadFileName>$(AspNetCoreSharedFxArchiveFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
        <RelativeLayoutPath></RelativeLayoutPath>
      </BundledLayoutComponent>

      <!-- The AspNet does not provide native MacOS PKG installers at this time; we use AspNet archives.
           https://github.com/aspnet/AspNetCore/issues/8806 -->
      <BundledLayoutComponent Include="DownloadedAspNetTargetingPackArchiveFile"
                              Condition="'$(InstallerExtension)' == '.pkg' And '$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(AspNetCoreSharedFxRootUrl)$(AspNetCoreTargetingPackBlobVersion)</BaseUrl>
        <DownloadFileName>$(AspNetTargetingPackArchiveFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
        <RelativeLayoutPath></RelativeLayoutPath>
      </BundledLayoutComponent>
      
      <BundledInstallerComponent Include="DownloadedAspNetTargetingPackInstallerFile"
                                 Condition="'$(InstallerExtension)' != '.pkg' And '$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl Condition="'$(AspNetTargetingPackIsPinned)' == 'true'">$(AspNetCoreSharedFxRootUrl)$(MicrosoftAspNetCoreAppRefPackageVersion)</BaseUrl>
        <BaseUrl Condition="'$(AspNetTargetingPackIsPinned)' != 'true'">$(AspNetCoreSharedFxRootUrl)$(MicrosoftAspNetCoreAppRefPackageVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedAspNetTargetingPackInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>

      <BundledInstallerComponent Include="DownloadedAspNetCoreSharedFxInstallerFile"
                                 Condition="'$(SkipBuildingInstallers)' != 'true' AND '$(DownloadedAspNetCoreSharedFxInstallerFileName)' != '' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(AspNetCoreSharedFxRootUrl)$(AspNetCoreBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedAspNetCoreSharedFxInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>

      <BundledInstallerComponent Include="AspNetCoreSharedFxBaseRuntimeVersionFile"
                                 Condition="!$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(AspNetCoreSharedFxRootUrl)$(AspNetCoreBlobVersion)</BaseUrl>
        <DownloadFileName>$(AspNetCoreSharedFxBaseRuntimeVersionFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
    </ItemGroup>
    
    <PropertyGroup>
      <IncludeWpfAndWinForms Condition=" '$(IncludeWpfAndWinForms)' == '' AND '$(Architecture)' == 'arm'">false</IncludeWpfAndWinForms>
      <IncludeWpfAndWinForms Condition=" '$(IncludeWpfAndWinForms)' == '' AND '$(OS)' == 'Windows_NT' ">true</IncludeWpfAndWinForms>
      <IncludeWpfAndWinForms Condition=" '$(IncludeWpfAndWinForms)' == '' ">false</IncludeWpfAndWinForms>
    </PropertyGroup>
    
    <ItemGroup Condition=" '$(IncludeWpfAndWinForms)' != 'false' ">
      <BundledLayoutPackage Include="MicrosoftWindowsDesktopAppTargetingPackNupkg">
        <PackageName>Microsoft.WindowsDesktop.App.Ref</PackageName>
        <PackageVersion>$(MicrosoftWindowsDesktopAppRefPackageVersion)</PackageVersion>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <RelativeLayoutPath>packs/%(PackageName)/%(PackageVersion)</RelativeLayoutPath>
      </BundledLayoutPackage>

      <BundledLayoutComponent Include="WinFormsAndWpfSharedFxArchiveFile">
        <BaseUrl>$(WinFormsAndWpfSharedFxRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(WinFormsAndWpfSharedFxArchiveFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledLayoutComponent>

      <BundledInstallerComponent Include="DownloadedWinFormsAndWpfSharedFrameworkInstallerFile"
                                 Condition="'$(SkipBuildingInstallers)' != 'true' And '$(InstallerExtension)' != '' And !$(Architecture.StartsWith('arm'))">
        <BaseUrl>$(WinFormsAndWpfSharedFxRootUrl)$(CoreSetupBlobVersion)</BaseUrl>
        <DownloadFileName>$(DownloadedWinFormsAndWpfSharedFrameworkInstallerFileName)</DownloadFileName>
        <AccessToken>$(CoreSetupBlobAccessTokenParam)</AccessToken>
      </BundledInstallerComponent>
    </ItemGroup>

  </Target>

  <Target Name="DownloadBundledComponents" DependsOnTargets="SetupBundledComponents">
    <ItemGroup>
      <BundledLayoutComponent>
        <DownloadDestination>$(DownloadsFolder)%(DownloadFileName)</DownloadDestination>
      </BundledLayoutComponent>
      <BundledInstallerComponent>
        <DownloadDestination>$(DownloadsFolder)%(DownloadFileName)</DownloadDestination>
      </BundledInstallerComponent>
      <ComponentToDownload Include="@(BundledLayoutComponent);@(BundledInstallerComponent)">
        <ShouldDownload Condition="!Exists('%(DownloadDestination)')">true</ShouldDownload>
      </ComponentToDownload>
    </ItemGroup>
  
    <DownloadFile Condition=" '@(ComponentToDownload)' != '' And '%(ComponentToDownload.ShouldDownload)' == 'true'"
                  Uri="%(ComponentToDownload.BaseUrl)/%(ComponentToDownload.DownloadFileName)%(ComponentToDownload.AccessToken)"
                  DestinationPath="%(ComponentToDownload.DownloadDestination)" />

    <ItemGroup>
      <BundledLayoutPackageDownloadProject Include="$(MSBuildThisFileDirectory)DownloadPackage.csproj">
        <Properties>
          PackageToRestore=%(BundledLayoutPackage.PackageName);
          PackageVersionToRestore=%(BundledLayoutPackage.PackageVersion);
          TargetFramework=%(BundledLayoutPackage.TargetFramework);
          LayoutPackageDescription=%(BundledLayoutPackage.Identity)
        </Properties>
      </BundledLayoutPackageDownloadProject>
    </ItemGroup>

    <MSBuild
      BuildInParallel="False"
      Projects="@(BundledLayoutPackageDownloadProject)">
    </MSBuild>

    <ItemGroup>
      <!-- Use lowercase package name in package path -->
      <BundledLayoutPackage>
        <LoweredPackageName>$([MSBuild]::ValueOrDefault('%(BundledLayoutPackage.PackageName)', '').ToLower())</LoweredPackageName>
      </BundledLayoutPackage>
      
      <BundledLayoutPackageDownloadFiles Include="$(NuGetPackageRoot)\%(BundledLayoutPackage.LoweredPackageName)\%(BundledLayoutPackage.PackageVersion)\**\*.*">
        <RelativeLayoutPath>%(BundledLayoutPackage.RelativeLayoutPath)</RelativeLayoutPath>
        <LayoutPackageDescription>%(BundledLayoutPackage.Identity)</LayoutPackageDescription>
      </BundledLayoutPackageDownloadFiles>

      <!-- Remove files from the root of the package, as these are either files NuGet writes, or not necessary -->
      <BundledLayoutPackageDownloadFiles Remove="$(NuGetPackageRoot)\%(BundledLayoutPackage.LoweredPackageName)\%(BundledLayoutPackage.PackageVersion)\*.*" />

      <!-- Set destination path in layout -->
      <BundledLayoutPackageDownloadFiles>
        <DestinationPath>%(BundledLayoutPackageDownloadFiles.RecursiveDir)%(BundledLayoutPackageDownloadFiles.Filename)%(BundledLayoutPackageDownloadFiles.Extension)</DestinationPath>
      </BundledLayoutPackageDownloadFiles>
      <BundledLayoutPackageDownloadFiles>
        <DestinationPath>$(RedistLayoutPath)/%(BundledLayoutPackageDownloadFiles.RelativeLayoutPath)/%(BundledLayoutPackageDownloadFiles.DestinationPath)</DestinationPath>
      </BundledLayoutPackageDownloadFiles>
      <BundledLayoutPackageDownloadFiles>
        <DestinationPath>$([MSBuild]::NormalizePath(%(BundledLayoutPackageDownloadFiles.DestinationPath)))</DestinationPath>
      </BundledLayoutPackageDownloadFiles>

      <!-- Creating a new item here isn't strictly necessary, but makes it easier to see what's going on in the .binlog,
           since the metadata updates don't show up there -->
      <BundledLayoutPackageDownloadFilesWithDestination Include="@(BundledLayoutPackageDownloadFiles)"/>
    </ItemGroup>
  </Target>

  <Target Name="CleanLayoutPath">
    <!-- Remove everything from the publish directory so we don't have left over items from previous builds -->
    <RemoveDir Directories="$(RedistLayoutPath)" />
    <MakeDir Directories="$(RedistLayoutPath)" />
  </Target>

  <Target Name="LayoutBundledComponents">
    <ExtractArchiveToDirectory SourceArchive="%(BundledLayoutComponent.DownloadDestination)"
                               DestinationDirectory="$(RedistLayoutPath)/%(BundledLayoutComponent.RelativeLayoutPath)" />

    <Copy SourceFiles="@(BundledLayoutPackageDownloadFilesWithDestination)"
          DestinationFiles="@(BundledLayoutPackageDownloadFilesWithDestination->'%(DestinationPath)')"
          SkipUnchangedFiles="true"
          />
    
  </Target>

  <Target Name="RetargetTools">
    <PropertyGroup>
      <ReplacementPattern>"version": ".*"</ReplacementPattern>
      <ReplacementString>"version": "$(MicrosoftNETCoreAppRuntimePackageVersion)"</ReplacementString>
    </PropertyGroup>
    <ItemGroup>
      <ToolRuntimeConfigPath Include="$(RedistLayoutPath)sdk/$(SdkVersion)/**/*.runtimeconfig.json" />
    </ItemGroup>
    <ReplaceFileContents
      InputFiles="@(ToolRuntimeConfigPath)"
      DestinationFiles="@(ToolRuntimeConfigPath)"
      ReplacementPatterns="$(ReplacementPattern)"
      ReplacementStrings="$(ReplacementString)" />
  </Target>
  
  <Target Name="GenerateVersionFile" DependsOnTargets="SetupBundledComponents;GetCoreSdkGitCommitInfo">
    <WriteLinesToFile File="$(SdkOutputDirectory).version"
                      Lines="$(GitCommitHash);$(SdkVersion);$(Rid)"
                      Overwrite="true" />
  </Target>
  
  <Target Name="LayoutAppHostTemplate" DependsOnTargets="RunResolvePackageDependencies">
    
    <PropertyGroup>
      <NETCoreAppHostPackageName>Microsoft.NETCore.App.Host.$(SharedFrameworkRid)</NETCoreAppHostPackageName>
      <AppHostRestorePath>$(IntermediateOutputPath)AppHostRestore\</AppHostRestorePath>
      <AppHostTemplatePath>$(SdkOutputDirectory)AppHostTemplate</AppHostTemplatePath>
    </PropertyGroup>
    
    <RemoveDir Directories="$(AppHostRestorePath)" />
    <MakeDir Directories="$(AppHostRestorePath)" />
      
    <ItemGroup>
      <AppHostTemplateDownloadPackageProject Include="$(MSBuildThisFileDirectory)DownloadPackage.csproj">
        <Properties>
          PackageToRestore=$(NETCoreAppHostPackageName);
          PackageVersionToRestore=$(MicrosoftNETCoreAppHostPackageVersion);
          TargetFramework=$(TargetFramework);
          RestorePackagesPath=$(AppHostRestorePath);
          RuntimeIdentifier=$(Rid)
        </Properties>
      </AppHostTemplateDownloadPackageProject>
    </ItemGroup>

    <MSBuild
      BuildInParallel="False"
      Projects="@(AppHostTemplateDownloadPackageProject)">
    </MSBuild>
    
    <PropertyGroup>
      <AppHostExecutableName>AppHost$(ExeExtension)</AppHostExecutableName>
    </PropertyGroup>

    <ItemGroup>
      <AllFileOfRestoredAppHostPackage Include="$(AppHostRestorePath)\**\*.*" />
      <NativeRestoredAppHostNETCore
          Include="@(AllFileOfRestoredAppHostPackage)"
          Condition="'%(FileName)%(Extension)' == '$(AppHostExecutableName)'"/>
    </ItemGroup>

    <Error Condition="@(NativeRestoredAppHostNETCore->Distinct()->Count()) != 1"
           Text="Failed to determine the $(NETCoreAppHostPackageName) executable in @(AllFileOfRestoredAppHostPackage)" />

    <Copy
        SourceFiles="@(NativeRestoredAppHostNETCore)"
        DestinationFolder="$(AppHostTemplatePath)" />

    <Message Text="Copy from @(NativeRestoredAppHostNETCore) to $(AppHostTemplatePath)."
             Importance="High" />
  
  </Target>
  
  <Target Name="GenerateLayout"
          DependsOnTargets="DownloadBundledComponents;
                            CleanLayoutPath;
                            LayoutBundledComponents;
                            GenerateVersionFile;
                            GenerateBundledVersions;
                            LayoutRuntimeGraph;
                            LayoutTemplates;
                            LayoutBundledTools;
                            RetargetTools;
                            CrossgenLayout;
                            LayoutAppHostTemplate;
                            SignLayout"
          BeforeTargets="AfterBuild">
  
  </Target>
  
  <Target Name="GenerateInternalLayout"
          DependsOnTargets="GenerateLayout"
          BeforeTargets="AfterBuild">

    <RemoveDir Directories="$(SdkInternalLayoutPath)" />
    <MakeDir Directories="$(SdkInternalLayoutPath)" />
    
    <!-- Create "SDK Internal" layout to create the MSI to bundle -->
    <ItemGroup>
      <SdkInternalFiles Include="$(RedistLayoutPath)sdk/$(SdkVersion)/**/*.*"/>
    </ItemGroup>

    <Copy SourceFiles="@(SdkInternalFiles)"
          DestinationFiles="@(SdkInternalFiles -> '$(SdkInternalLayoutPath)sdk\$(SdkVersion)\%(RecursiveDir)%(Filename)%(Extension)')"/>

  </Target>
</Project>
